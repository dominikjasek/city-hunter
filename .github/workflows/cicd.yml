name: Node.js CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true


jobs:
  backend-build:
    name: Backend build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/api
    strategy:
      matrix:
        node-version: [16.x]
        architecture: [x64]
    steps:
      - name: CHECK-OUT GIT REPOSITORY
        uses: actions/checkout@v2

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version}}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: INSTALL PROJECT DEPENDENCIES (NPM)
        run: npm ci

      - name: BUILD APPLICATION
        run: npm run build --if-present

  backend-unit-test:
    name: Backend Unit test
    needs: backend-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/api
    strategy:
      matrix:
        node-version: [16.x]
        architecture: [x64]
    steps:
      - name: CHECK-OUT GIT REPOSITORY
        uses: actions/checkout@v2

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version}}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: INSTALL PROJECT DEPENDENCIES (NPM)
        run: npm ci

      - name: BUILD APPLICATION
        run: npm run build --if-present

      - name: START DOCKER TEST DATABASE
        run: npm run docker:up

      - name: UNIT TEST (JEST)
        run: npm run test:ci

      - name: STOP DOCKER TEST DATABASE
        run: npm run docker:down

  frontend-build:
    name: Frontend build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/web-app
    strategy:
      matrix:
        node-version: [14.x]
        architecture: [x64]
    steps:
      - name: CHECK-OUT GIT REPOSITORY
        uses: actions/checkout@v2

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version}}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: INSTALL PROJECT DEPENDENCIES (NPM)
        run: npm ci

      - name: BUILD APPLICATION
        run: npm run build --if-present

  deploy-api:
    needs: [backend-unit-test, frontend-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}

  deploy-web-app:
    needs: [deploy-api]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy to Vercel Action
        uses: BetaHuhn/deploy-to-vercel-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
